rownames(plant_sex) <- make.names(new_rownames, unique=TRUE)
rownames(plant_sex) <- as.character(sub("\\."," ", rownames(plant_sex)))
head(rownames(plant_sex))
head(sol_tree$tip.label)
sol_tree$tip.label <- sub("_"," ",sol_tree$tip.label)
head(sol_tree$tip.label)
xxx <- ifelse(rownames(plant_sex) %in% sol_tree$tip.label, plant_sex$sexual_system, NA)
xxx
xxx <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
xxx
length(sol_tree$tip.label)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex[sexual_system], NA)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex[[sexual_system]], NA)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex[,sexual_system], NA)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits
?ifelse
safe.ifelse <- function(cond, yes, no){ class.y <- class(yes)
X <- ifelse(cond,yes,no)
class(X) <-class.y; return(X)
}
tip_traits <- safe.ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits
tip_traits
tip_traits <- safe.ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "NA")
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_tarits
tip_traits
class(tip_traits)
str(tip_traits)
factor(plant_sex$sexual_system)
as.factor(plant_sex$sexual_system)
levels(plant_sex$sexual_system)
levels(plant_sex$sexual_system)[tip_traits]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits
as.numeric(tip_traits)
as.character(tip_traits)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
helic_char <- helic_char[helic_tree$tip.label, ]
head(helic_char)
helic_color <- helic_char$perColor
helic_color
class(helic_color)
tip_traits <- as.factor(levels(plant_sex$sexual_system)[tip_traits])
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- as.factor(levels(plant_sex$sexual_system)[tip_traits])
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
as.character(tip_traits)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
as.character(tip_traits)
tip_traits
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
head(tip_traits)
tip_traits
as.numeric(unique(tip_traits)
)
levels(tip_traits)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
legend(legend_loc, legend=as.numeric(levels(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
legend(legend_loc, legend=as.numeric(levels(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
as.numeric(unique(tip_traits))
unique(tip_traits)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram <- function(apetree, character_vector, tree_type="phylogram", binary_trait=FALSE, legend=TRUE, legend_cex=0.75, tiplabel_cex=0.4, legend_loc="bottomleft") {
plot(apetree, show.tip.label=FALSE, no.margin=FALSE, type=tree_type)
# binary plot colors and legend
if(isTRUE(binary_trait)) {
character_vector <- character_vector + 1
tipcols <- c("black","red")
tiplabels(col=tipcols[character_vector], pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.character(unique(character_vector)), fill=unique(tipcols[character_vector]), bty="n", border=FALSE, cex=legend_cex)
}
}
# discrete plot colors and legend
else {
tiplabels(col=character_vector, pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=(unique(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
}
}
}
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tiplabels(col=levels(character_vector), pch=19, cex=tiplabel_cex)
plot_trait_dendrogram <- function(apetree, character_vector, tree_type="phylogram", binary_trait=FALSE, legend=TRUE, legend_cex=0.75, tiplabel_cex=0.4, legend_loc="bottomleft") {
plot(apetree, show.tip.label=FALSE, no.margin=FALSE, type=tree_type)
# binary plot colors and legend
if(isTRUE(binary_trait)) {
character_vector <- character_vector + 1
tipcols <- c("black","red")
tiplabels(col=tipcols[character_vector], pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.character(unique(character_vector)), fill=unique(tipcols[character_vector]), bty="n", border=FALSE, cex=legend_cex)
}
}
# discrete plot colors and legend
else {
tiplabels(col=levels(character_vector), pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=(unique(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
}
}
}
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram <- function(apetree, character_vector, tree_type="phylogram", binary_trait=FALSE, legend=TRUE, legend_cex=0.75, tiplabel_cex=0.4, legend_loc="bottomleft") {
plot(apetree, show.tip.label=FALSE, no.margin=FALSE, type=tree_type)
# binary plot colors and legend
if(isTRUE(binary_trait)) {
character_vector <- character_vector + 1
tipcols <- c("black","red")
tiplabels(col=tipcols[character_vector], pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.character(unique(character_vector)), fill=unique(tipcols[character_vector]), bty="n", border=FALSE, cex=legend_cex)
}
}
# discrete plot colors and legend
else {
tiplabels(col=levels(character_vector), pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=levels(character_vector), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
}
}
}
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
levels(tip_traits)
factor(tip_traits)
levels(tip_traits)
unique(tip_traits)
legend(legend_loc, legend=factor(levels(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
plot_trait_dendrogram <- function(apetree, character_vector, tree_type="phylogram", binary_trait=FALSE, legend=TRUE, legend_cex=0.75, tiplabel_cex=0.4, legend_loc="bottomleft") {
plot(apetree, show.tip.label=FALSE, no.margin=FALSE, type=tree_type)
# binary plot colors and legend
if(isTRUE(binary_trait)) {
character_vector <- character_vector + 1
tipcols <- c("black","red")
tiplabels(col=tipcols[character_vector], pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.character(unique(character_vector)), fill=unique(tipcols[character_vector]), bty="n", border=FALSE, cex=legend_cex)
}
}
# discrete plot colors and legend
else {
tiplabels(col=levels(character_vector), pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=factor(levels(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
}
}
}
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
levels(tip_traits)
level(tip_traits)
unique(tip_traits)
plot_trait_dendrogram <- function(apetree, character_vector, tree_type="phylogram", binary_trait=FALSE, legend=TRUE, legend_cex=0.75, tiplabel_cex=0.4, legend_loc="bottomleft") {
plot(apetree, show.tip.label=FALSE, no.margin=FALSE, type=tree_type)
# binary plot colors and legend
if(isTRUE(binary_trait)) {
character_vector <- character_vector + 1
tipcols <- c("black","red")
tiplabels(col=tipcols[character_vector], pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.character(unique(character_vector)), fill=unique(tipcols[character_vector]), bty="n", border=FALSE, cex=legend_cex)
}
}
# discrete plot colors and legend
else {
tiplabels(col=levels(character_vector), pch=19, cex=tiplabel_cex)
if(isTRUE(legend)) {
legend(legend_loc, legend=as.numeric(unique(character_vector)), fill=as.numeric(unique(character_vector)), bty="n", border=FALSE, cex=legend_cex)
}
}
}
plot_trait_dendrogram(sol_tree, tip_traits, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip[NA]
tip_traits[NA]
length(tip_traits[NA])
tip_traits[,1]
tip_traits[,:1]
tip_traits[:1]
tip_traits[:1,]
tip_traits[,1]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, Unknown)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "Unknown")
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "Unknown")
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- (plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "Unknown")
levels(tip_traits)
factor(tip_traits)
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "NA")
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
factor(tip_traits)
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "NA")
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "NA")
tip_traits
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, "NA")
tip_traits
tip_traits <- ifelse(sol_tree$tip.label %in% rownames(plant_sex), plant_sex$sexual_system, NA)
head(rownames(plant_sex))
head(sol_tree$tip.label)
sol_tree$tip.label <- sub("_"," ",sol_tree$tip.label)
head(sol_tree$tip.label)
sol_tree$tip.label %in% rownames(plant_sex)
which(sol_tree$tip.label %in% rownames(plant_sex) {
which(sol_tree$tip.label %in% rownames(plant_sex)
which(sol_tree$tip.label %in% rownames(plant_sex))
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
which(sol_tree$tip.label %in% rownames(plant_sex))
which(rownames(plant_sex) %in% sol_tree$tip.label)
tip_traits <- ifelse(rownames(plant_sex) %in% sol_tree$tip.label,plant_sex$sexual_system,"")
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits]
tip_traits
tip_traits <- levels(plant_sex$sexual_system)[tip_traits!=NA]
tip_traits
tip_traits <- ifelse(rownames(plant_sex) %in% sol_tree$tip.label,plant_sex$sexual_system)
tip_traits <- ifelse(rownames(plant_sex) %in% sol_tree$tip.label,plant_sex$sexual_system,)
tip_traits <- ifelse(rownames(plant_sex) %in% sol_tree$tip.label,plant_sex$sexual_system, )
which(rownames(plant_sex) %in% sol_tree$tip.label)
tip_traits <- which(rownames(plant_sex) %in% sol_tree$tip.label)
tip_traits <- which(rownames(plant_sex) %in% sol_tree$tip.label)
merge(sol_tree$tip.label, plant_sex, by.x=rownames(plant_sex), by.y=sol_tree$tip.label))
merge(sol_tree$tip.label, plant_sex, by.x=rownames(plant_sex), by.y=sol_tree$tip.label)
merge(sol_tree$tip.label, plant_sex, by.x=rownames(plant_sex)
)
?merge
merge(sol_tree$tip.label, plant_sex, by=rownames(plant_sex))
merge(sol_tree$tip.label, plant_sex, by=sol_tree$tip.label))
merge(sol_tree$tip.label, plant_sex, by=sol_tree$tip.label)
merge(sol_tree$tip.label, plant_sex, by=0)
merge(plant_sex, sol_tree$tip.label, by=0)
head(sol_tree$tip.label)
head(sol_tree$tip.label)
length(sol_tree$tip.label)
plant_sex[sol_tree$tip.label]
plant_sex[sol_tree$tip.label,]
plant_sex[sol_tree$tip.label]
plant_sex[[sol_tree$tip.label]]
plant_sex[sol_tree$tip.label]
plant_sex[,sol_tree$tip.label]
plant_sex[sol_tree$tip.label,]
head(plant_sex)
head(rownames(plant_sex))
df[match(sol_tree$tip.label,rownames(plant_sex))]
df[match(sol_tree$tip.label,rownames(plant_sex)),]
df[match(sol_tree$tip.label,rownames(plant_sex)),]
which(sol_tree$tip.label %in% plant_sex)
which(sol_tree$tip.label %in% rownames(plant_sex))
(sol_tree$tip.label %in% rownames(plant_sex))
ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,<NA>)
ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
plot_trait_dendrogram(sol_tree, tipchars, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tipchars <- ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
plot_trait_dendrogram(sol_tree, tipchars, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tipchars <- levels(plant_sex$sexual_system)[tip_traits]
tipchars
levels(plant_sex$sexual_system)
levels(plant_sex$sexual_system)[tipchars]
tipchars[levels(plant_sex$sexual_system)]
levels(plant_sex$sexual_system[tipchars])
levels(plant_sex$sexual_system([tipchars])
levels(plant_sex$sexual_system)[tipchars])
levels(plant_sex$sexual_system)[tipchars]
levels(plant_sex$sexual_system)[tipchars,]
levels(plant_sex$sexual_system)[, tipchars]
levels(plant_sex$sexual_system)[[tipchars]]
tipchars <- ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
tipchars
class(tipchars)
match(tipchars,levels(plant_sex$sexual_system))
sex_levels <- levels(plant_sex$sexual_system)
sex_levels %in% tipchars
tipchars
sex_levels
sex_levels[tipchars]
plot_trait_dendrogram(sol_tree, solanaceae_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
solanacea_sex <- sex_levels[tipchars]
plot_trait_dendrogram(sol_tree, solanaceae_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
solanacea_sex[is.na(solanacea_sex)] <- " "
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
solanacea_sex
solanacea_sex <- sex_levels[tipchars]
solanacea_sex
solanacea_sex[is.na(solanacea_sex)] <- "unknown"
solanacea_sex
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
as.character(solanacea_sex)
sol_tree <- read.tree("/Users/alex/GitHub/traitathon/solanaceae/Solanaceae.tre")
sol_char <- read.csv("/Users/alex/GitHub/traitathon/solanaceae/SolanaceaeTraits.csv", row.names=1)
#' Then make sure the character matrix rows are in the same order as the tree tips. This is essential, otherwise they won't match up on the tree.
sol_char <- sol_char[sol_tree$tip.label, ]
#' We only have one binary character that we want to map onto the tree, so we can plot that single column.
plot_trait_dendrogram(sol_tree, sol_char, legend=TRUE, binary=TRUE, tree_type="fan", tiplabel_cex=0.2)
anolis_tree <- read.tree("/Users/alex/GitHub/traitathon/anolis/anolis.phy")
anolis_char <- read.csv("/Users/alex/GitHub/traitathon/anolis/anolis.csv", row.names=1)
#' Make sure the character matrix rows are in the same order as the tree tips
anolis_char <- anolis_char[anolis_tree$tip.label, ]
#' Pick out the character trait to plot on the tree. Here I extract what islands each species is native to.
anolis_char <- anolis_char$island
plot_trait_dendrogram(anolis_tree, anolis_char, legend=TRUE, binary=FALSE, tree_type="fan", tiplabel_cex=0.5)
#' Maybe this would look better as a regular phylogram...
plot_trait_dendrogram(anolis_tree, anolis_char, legend=TRUE, binary=FALSE, tree_type="phylogram", tiplabel_cex=0.25)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
sol_tree <- read.tree("/Users/alex/GitHub/traitathon/solanaceae/Solanaceae.tre")
sol_char <- read.csv("/Users/alex/GitHub/traitathon/solanaceae/SolanaceaeTraits.csv", row.names=1)
#' Then make sure the character matrix rows are in the same order as the tree tips. This is essential, otherwise they won't match up on the tree.
sol_char <- sol_char[sol_tree$tip.label, ]
#' We only have one binary character that we want to map onto the tree, so we can plot that single column.
plot_trait_dendrogram(sol_tree, sol_char, legend=TRUE, binary=TRUE, tree_type="fan", tiplabel_cex=0.2)
anolis_tree <- read.tree("/Users/alex/GitHub/traitathon/anolis/anolis.phy")
anolis_char <- read.csv("/Users/alex/GitHub/traitathon/anolis/anolis.csv", row.names=1)
#' Make sure the character matrix rows are in the same order as the tree tips
anolis_char <- anolis_char[anolis_tree$tip.label, ]
#' Pick out the character trait to plot on the tree. Here I extract what islands each species is native to.
anolis_char <- anolis_char$island
plot_trait_dendrogram(anolis_tree, anolis_char, legend=TRUE, binary=FALSE, tree_type="fan", tiplabel_cex=0.5)
factor(solanacea_sex)
levels(solanacea_sex)
unique(solanacea_sex)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
as.numeric(unique(solanacea_sex))
(unique(solanacea_sex))
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
sol_tree <- read.tree("/Users/alex/GitHub/traitathon/solanaceae/Solanaceae.tre")
sol_char <- read.csv("/Users/alex/GitHub/traitathon/solanaceae/SolanaceaeTraits.csv", row.names=1)
#' Then make sure the character matrix rows are in the same order as the tree tips. This is essential, otherwise they won't match up on the tree.
sol_char <- sol_char[sol_tree$tip.label, ]
#' We only have one binary character that we want to map onto the tree, so we can plot that single column.
plot_trait_dendrogram(sol_tree, sol_char, legend=TRUE, binary=TRUE, tree_type="fan", tiplabel_cex=0.2)
anolis_tree <- read.tree("/Users/alex/GitHub/traitathon/anolis/anolis.phy")
anolis_char <- read.csv("/Users/alex/GitHub/traitathon/anolis/anolis.csv", row.names=1)
#' Make sure the character matrix rows are in the same order as the tree tips
anolis_char <- anolis_char[anolis_tree$tip.label, ]
#' Pick out the character trait to plot on the tree. Here I extract what islands each species is native to.
anolis_char <- anolis_char$island
plot_trait_dendrogram(anolis_tree, anolis_char, legend=TRUE, binary=FALSE, tree_type="fan", tiplabel_cex=0.5)
#' Maybe this would look better as a regular phylogram...
plot_trait_dendrogram(anolis_tree, anolis_char, legend=TRUE, binary=FALSE, tree_type="phylogram", tiplabel_cex=0.25)
helic_tree <- read.tree("/Users/alex/GitHub/traitathon/heliconia/heliconia.phy")
helic_char <- read.csv("/Users/alex/GitHub/traitathon/heliconia/heliconia1.csv", row.names=1)
#' Again, let's make sure the rownames of the character matrix match up with the tree tips
helic_char <- helic_char[helic_tree$tip.label, ]
#' Let's pick out a character trait to plot, like flower arrangement, or perianth color
helic_arrangement <- helic_char$arrangment
helic_color <- helic_char$perColor
#' Now plot it
plot_trait_dendrogram(helic_tree, helic_arrangement, legend=TRUE, binary=FALSE, tree_type="phylogram", tiplabel_cex=0.4, legend_loc="bottomleft")
#' Example 4: Attach other sources of data to a tree (Tree of Sex) <br />
#' <br />
#' L
new_rownames <- paste(plant_sex$genus,plant_sex$species, sep=" ")
rownames(plant_sex) <- make.names(new_rownames, unique=TRUE)
rownames(plant_sex) <- as.character(sub("\\."," ", rownames(plant_sex)))
head(rownames(plant_sex))
#' Now we can extract some information...like sexual systems in the solanaceae example <br />
#' The tree tip labels in the solanacea have underscores in them, let's change that real quick to match our Tree of Sex data <br />
head(sol_tree$tip.label)
sol_tree$tip.label <- sub("_"," ",sol_tree$tip.label)
head(sol_tree$tip.label)
head(plant_sex)
#' Now extract the Tree of Sex "sexual system" data for leaves in our tree. If there's no entry for a tip species in the Tree of Sex database, just print an "NA" instead <br />
tipchars <- ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
sex_levels <- levels(plant_sex$sexual_system)
solanacea_sex <- sex_levels[tipchars]
solanacea_sex[is.na(solanacea_sex)] <- "unknown"
as.character(solanacea_sex)
#as.character(tip_traits)
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
solanacea_sex
class(solanacea_sex)
class(helic_color)
solanacea_sex <- as.factor(solanacea_sex)
class(solanacea_sex)
head(solanacea_sex)
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
tipchars <- ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
sex_levels <- levels(plant_sex$sexual_system)
solanacea_sex <- sex_levels[tipchars]
solanacea_sex[is.na(solanacea_sex)] <- "unknown"
solanacea_sex <- as.factor(solanacea_sex)
#' let's see if it worked...!
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram
source('~/GitHub/traitathon/Tutorials/walkthrough.R')
colnames(plant_sex)
#' Let's reformat this data a little bit. We want the rownames to be "Genus species".
new_rownames <- paste(plant_sex$genus,plant_sex$species, sep=" ")
rownames(plant_sex) <- make.names(new_rownames, unique=TRUE)
rownames(plant_sex) <- as.character(sub("\\."," ", rownames(plant_sex)))
head(rownames(plant_sex))
#' Now we can extract some information...like sexual systems in the solanaceae example <br />
#' The tree tip labels in the solanacea have underscores in them, let's change that real quick to match our Tree of Sex data <br />
head(sol_tree$tip.label)
sol_tree$tip.label <- sub("_"," ",sol_tree$tip.label)
head(sol_tree$tip.label)
#' Now extract the Tree of Sex "sexual system" data for leaves in our tree. If there's no entry for a tip species in the Tree of Sex database, title it "unknown" <br />
tipchars <- ifelse(sol_tree$tip.label %in% rownames(plant_sex),plant_sex$sexual_system,NA)
sex_levels <- levels(plant_sex$sexual_system)
solanacea_sex <- sex_levels[tipchars]
solanacea_sex[is.na(solanacea_sex)] <- "unknown"
solanacea_sex <- as.factor(solanacea_sex)
#' let's see if it worked...!
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright")
source('~/GitHub/traitathon/Tutorials/walkthrough.R')
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright", legend_cex=0.4)
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright", legend_cex=0.6)
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomright", legend_cex=0.6)
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomleft", legend_cex=0.6)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
plot_trait_dendrogram(sol_tree, sol_char, legend=TRUE, binary=TRUE, tree_type="fan", tiplabel_cex=0.2)
source('/Users/alex/GitHub/traitathon/treeOfSex/plot_trait_dendrogram.R')
source('/Users/alex/GitHub/traitathon/treeOfSex/GetDatabase.R')
plot_trait_dendrogram(sol_tree, sol_char, legend=TRUE, binary=TRUE, tree_type="fan", tiplabel_cex=0.2)
palette()
palette("blue","red","orange","purple","black","gray","lightblue","yellow","green")
palette(c("blue","red","orange","purple","black","gray","lightblue","yellow","green"))
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomleft", legend_cex=0.6)
palette(c("blue","red","orange","purple","black","green","gray","lightblue","yellow",))
palette(c("blue","red","orange","purple","black","green","gray","lightblue","yellow"))
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomleft", legend_cex=0.6)
palette(c("blue","red", "yellow","orange","purple","black","green","lightblue","grey"))
plot_trait_dendrogram(sol_tree, solanacea_sex, tree_type="fan", tiplabel_cex=0.15, legend=TRUE, legend_loc="bottomleft", legend_cex=0.6)
source('/Users/alex/GitHub/traitathon/treeOfSex/get_tos_database.R')
install.packages("reol")
install.packages("Reol")
ls
library(Reol)
?Reol
web <- "http://lib.colostate.edu/wildlife/atoz.php?letter=ALL"
weblines <- readLines(web)
weblines <- weblines[grep("Genus", weblines)][-c(1,2)]
speciesList <- NULL
for(i in sequence(length(weblines))){
species <- strsplit(weblines[i], ">")[[1]][3]
species <- strsplit(species, "<")[[1]][1]
speciesList <- c(speciesList, species)
}
speciesList
speciesList[,3]
anolis_char <- read.csv("https://raw.githubusercontent.com/lukejharmon/traitathon/master/anolis/anolis.csv", row.names=1)
anolis_char <- read.csv(url("https://raw.githubusercontent.com/lukejharmon/traitathon/master/anolis/anolis.csv"), row.names=1)
anolis_char <- read.csv(url(https://raw.githubusercontent.com/lukejharmon/traitathon/master/anolis/anolis.csv), row.names=1)
anolis_char <- read.csv(url("https://raw.githubusercontent.com/lukejharmon/traitathon/master/anolis/anolis.csv"), row.names=1)
install.packages("RCurl")
install.packages("RCurl")
SolanaceaeTraits <- read.csv("/Users/alex/GitHub/traitathon/solanaceae/SolanaceaeTraits.csv")
nameMatches1<-tnrs_match_names(gsub("_", " ", as.character(SolanaceaeTraits[1:1000,1])))
require(aRbor)
install.packages("aRbor")
library(aRbor)
require(rotl)
nameMatches1<-tnrs_match_names(gsub("_", " ", as.character(SolanaceaeTraits[1:1000,1])))
nameMatches2<-tnrs_match_names(gsub("_", " ", as.character(SolanaceaeTraits[1001:1248,1])))
nameMatches<-rbind(nameMatches1, nameMatches2)
library(devtools)
install_github(alexharkess/tosr)
install_github("alexharkess/tosr")
install_github("alexharkess/tosr")
install_github("alexharkess/tosr")
library(tosr)
install_github(alexharkess/tosr)
